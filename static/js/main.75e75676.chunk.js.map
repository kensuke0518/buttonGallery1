{"version":3,"sources":["components/blocks/Character.js","components/blocks/Background.js","components/blocks/Padding.js","components/blocks/Border.js","components/blocks/BorderRadius.js","components/Preview.js","components/Cascade.js","components/samples/Sample01.js","components/samples/Sample.js","components/Integrate.js","App.js","reportWebVitals.js","index.js"],"names":["Character","useContext","Sheet","styleState","setStyleDispatch","useState","character","state","setState","chFunc","newState","obj","type","value","style","componentStyle","heading","a","onChange","e","target","Background","bgcolor","bgCSS","css","property","comp","useEffect","newStyle","background","Padding","size","unit","pdCSS","padding","min","max","Border","check","color","directionFunc","num","indexOf","push","splice","bdCSS","length","map","tblr","newTblr","charAt","toUpperCase","slice","direction","replace","toLowerCase","name","id","onClick","defaultChecked","BorderRadius","horizonVertical","b","c","d","sampling","Object","keys","borderRadius","dispBrValue","radiusUseFunc","targetValue","checked","brCSS","sizeFunc","unitFunc","stateStyles","brValue","p","Preview","bgColorState","setBgColorState","width","height","display","alignItems","justifyContent","border","buttonStyle","textDecoration","otherStyle","href","preventDefault","className","defaultValue","Cascade","chara","undefined","text","readOnly","Sample01","sampleData","textShadow","Sample","React","createContext","initialState","borderLeft","paddingLeft","reducer","action","componentUnit","Integrate","useReducer","dispatch","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e75676.chunk.js","sourcesContent":["import { useState, useCallback, useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//文言\nexport function Character() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    const [state, setState] = useState({\n        character: '',\n    })\n\n    const characterFunc = e => {\n        const newState = {\n            ...state,\n            character: e.target.value,\n        }\n        setState({\n            ...newState,\n        })\n        chFunc(newState);\n    }\n\n    const chFunc = (newState = state) => {\n        const obj = {}\n        obj['character'] = newState.character\n        setStyleDispatch({ type: 'ch', value: obj });\n    }\n\n    return (\n        <div>\n            <p style={styleState.componentStyle.heading.a}>ボタンに入る文字</p>\n            <input type=\"text\" value={state.character} onChange={characterFunc} />\n        </div>\n    )\n}\n","import { useState, useCallback, useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//背景色\nexport function Background() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    const [state, setState] = useState({\n        bgcolor: '#189bdc',\n    })\n\n    const bgColorFunc = e => {\n        const newState = {\n            ...state,\n            bgcolor: e.target.value,\n        }\n        setState({ //setStateが遅い。。。\n            ...newState,\n        })\n        bgCSS(newState);\n    }\n\n    const bgCSS = (newState = state) => {\n        //オブジェクトで示す\n        const obj = {}\n        obj['background'] = newState.bgcolor\n\n        //CSSで示す\n        let css = 'background:';\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = { ...newState }\n\n        //CSSの状態をレデューサーへ（あるいはアクションクリエイターへ）渡す\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n        setStyleDispatch({ type: 'bg', value });\n    }\n\n    useEffect(() => { bgCSS() }, [])\n    \n    return (\n        <div>\n            <p style={styleState.componentStyle.heading.a}>ボタンの背景色</p>\n            <div><input type=\"color\" value={styleState.newStyle.background.comp.bgcolor} onChange={bgColorFunc} /></div>\n            <div>{styleState.newStyle.background.comp.bgcolor}</div>\n        </div>\n    )\n}\n","import { useState, useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//余白\nexport function Padding() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    const [state, setState] = useState({\n        size: '10',\n        unit: 'px',\n    })\n\n    const sizeFunc = e => {\n        const newState = {\n            ...state,\n            size: e.target.value,\n        }\n        setState({\n            ...newState\n        })\n        pdCSS(newState);\n    }\n\n    const pdCSS = (newState = state) => {\n        //オブジェクトで示す\n        const obj = {}\n        obj['padding'] = `${newState.size}${newState.unit}`\n\n        //CSSで示す\n        let css = 'padding:';\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = { ...newState }\n\n        //ストアへ渡す形を作る\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n\n        setStyleDispatch({ type: 'pd', value })\n    }\n\n    useEffect(() => { pdCSS() }, [])\n\n    return (\n        <div>\n            <p style={styleState.componentStyle.heading.a}>余白</p>\n            <input type=\"range\" value={styleState.newStyle.padding.comp.size} min=\"0\" max=\"100\" onChange={sizeFunc} />\n            <div>{styleState.newStyle.padding.comp.size}px</div>\n        </div>\n    )\n}\n\n","import { useState, useCallback, useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//ボーダー\nexport function Border() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    const [state, setState] = useState({\n        check: ['left'],\n        size: '3',\n        color: '#ff0000',\n    })\n\n    //方向\n    const directionFunc = e => {\n        const [...check] = state.check;\n        const num = check.indexOf(e.target.value);\n        if (num === -1) {\n            check.push(e.target.value)\n        }\n        else {\n            check.splice(num, 1)\n        }\n        const newState = {\n            ...state,\n            check: check,\n        }\n        setState({\n            ...newState,\n        })\n        bdCSS(newState);\n    }\n\n    //サイズ\n    const sizeFunc = e => {\n        const newState = {\n            ...state,\n            size: e.target.value,\n        }\n        setState({\n            ...newState,\n        })\n        bdCSS(newState);\n   }\n\n    //カラー\n    const colorFunc = e => {\n        const newState = {\n            ...state,\n            color: e.target.value,\n        }\n        setState({\n            ...newState,\n        })\n        bdCSS(newState);\n    }\n\n    //CSS\n    function bdCSS(newState = state) {\n        //オブジェクトで示す。\n        const obj = {}\n        if (newState.check.length === 4) {\n            obj['border'] = `${newState.size}px solid ${newState.color}`\n        }\n        else if (1 < newState.check.length < 4) {\n            newState.check.map(tblr => {\n                const newTblr = tblr.charAt(0).toUpperCase() + tblr.slice(1);\n                obj['border' + newTblr] = `${newState.size}px solid ${newState.color}`\n            })\n        }\n        else if (newState.check.length === 0) {\n            obj = {}\n        }\n        if (newState.size === 0) {\n            obj = {}\n        }\n\n        //CSSで示す\n        let css = '';\n        for (let property in obj) {\n            let direction = property.replace(/border/g, '').toLowerCase();\n            direction === '' ? direction = 'border' : direction = `border-${direction}`;\n            css = css + direction + ': ' + obj[property] + ';\\n';\n        }\n        \n        //ストアへ渡す形を作る\n        const value = {\n            obj,\n            css\n        }\n        \n        setStyleDispatch({ type: 'bd', value });\n    }\n\n    useEffect(() => { bdCSS() }, [])\n    \n    return (\n        <div>\n            <p style={styleState.componentStyle.heading.a}>ボーダー</p>\n            <div>\n                <input type=\"checkbox\" name=\"\" value=\"top\" id=\"borderTop\" onClick={directionFunc} />上\n                <input type=\"checkbox\" name=\"\" value=\"bottom\" id=\"borderBottom\" onClick={directionFunc} />下\n                <input type=\"checkbox\" name=\"\" value=\"left\" id=\"borderLeft\" defaultChecked onClick={directionFunc} />左\n                <input type=\"checkbox\" name=\"\" value=\"right\" id=\"borderRight\" onClick={directionFunc} />右\n            </div>\n            <input type=\"range\" value={state.size} min=\"0\" max=\"10\" onChange={sizeFunc} />\n            <div>{state.size}px</div>\n            <input type=\"color\" value={state.color} onChange={colorFunc} />\n            <div>{state.color}</div>\n        </div>\n    )\n}\n","import { useState, useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//角丸\n//https://coliss.com/articles/build-websites/operation/css/css-border-radius-can-do-that.html\nexport function BorderRadius() {\n    //CSSレデューサーを取得\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    let [state, setState] = useState({\n        horizonVertical: false,\n        style: {\n            a: {\n                check: true,\n                size: '10',\n                unit: 'px',\n            },\n            b: {\n                check: false,\n                size: '10',\n                unit: 'px',\n            },\n            c: {\n                check: false,\n                size: '10',\n                unit: 'px',\n            },\n            d: {\n                check: false,\n                size: '10',\n                unit: 'px',\n            },\n        },\n        sampling:false\n    })\n\n    //サンプルの状態をチェック：setState以外でのstateの変更なので×！他にいい方法がないか考える。\n    if (Object.keys(styleState.newStyle.borderRadius.comp).length !== 0) {\n        if (styleState.newStyle.borderRadius.comp.sampling === true) {\n            state = styleState.newStyle.borderRadius.comp;\n            /*setState({\n                ...styleState.newStyle.borderRadius.comp,\n                //sampling: false\n            })*/\n        }\n    }\n\n    //水平垂直\n    const horizonVerticalFunc = e => {\n        const newState = {\n            ...state,\n            horizonVertical: e.target.checked\n        }\n        setState({\n            ...newState,\n        })\n    }\n\n    //各頂点を使うかどうか\n    const radiusUseFunc = e => {\n        //チェックされた要素がaかbかを判断する\n        const targetValue = e.target.value;\n        const newState = {\n            ...state,\n            style: {\n                ...state.style,\n                [targetValue]: {\n                    ...state.style[targetValue],\n                    check: e.target.checked\n                }\n            },\n            sampling: false\n        }\n        setState({\n            ...newState,\n        })\n        brCSS(newState);\n    }\n\n    //サイズの調整\n    const sizeFunc = e => {\n        const targetValue = e.target.name;\n        const newState = {\n            ...state,\n            style: {\n                ...state.style,\n                [targetValue]: {\n                    ...state.style[targetValue],\n                    size: e.target.value\n                }\n            },\n            sampling: false\n        }\n        setState({\n            ...newState,\n        })\n        brCSS(newState);\n    }\n\n    //単位の設定\n    const unitFunc = e => {\n        const targetValue = e.target.name;\n        const newState = {\n            ...state,\n            style: {\n                ...state.style,\n                [targetValue]: {\n                    ...state.style[targetValue],\n                    unit: e.target.value\n                }\n            },\n            sampling: false\n        }\n        setState({\n            ...newState,\n        })\n        brCSS(newState);\n    }\n\n    //最終的なCSSの抽出\n    const brCSS = (newState = state) => {\n        const obj = {}\n        const stateStyles = newState.style;\n        let brValue = '';\n        for (let p in stateStyles) {\n            if (stateStyles[p].check === true) {\n                brValue = `${brValue} ${stateStyles[p].size}${stateStyles[p].unit}`\n            }\n        }\n        obj['borderRadius'] = brValue;\n\n        //CSSで示す\n        let css = 'border-radius:';\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = newState\n\n        //ストアへ渡す形を作る\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n\n        setStyleDispatch({ type: 'br', value })\n    }\n\n    useEffect(() => {\n        brCSS();    }, [])\n\n    let dispBrValue;\n    if (Object.keys(styleState.newStyle.borderRadius.comp).length === 0) {\n        dispBrValue = state\n    }\n    else {\n        dispBrValue = styleState.newStyle.borderRadius.comp;\n    }\n\n\n\n    return (\n        <div>\n            <p style={styleState.componentStyle.heading.a}>角丸</p>\n            <div>\n                <input type=\"checkbox\" onClick={horizonVerticalFunc} />「水平半径/垂直半径」を使用する。\n            </div>\n            <div>\n                <input type=\"checkbox\" value=\"a\" onChange={radiusUseFunc} checked={state.style.a.check} />A<br />\n                <input type=\"range\" name=\"a\" value={dispBrValue.style.a.size} onChange={sizeFunc} />\n                <div>{dispBrValue.style.a.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"a\" onChange={unitFunc} defaultChecked />px\n                    <input type=\"radio\" value=\"%\" name=\"a\" onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"a\" onChange={unitFunc} />rem\n                </div>\n            </div>\n            <div>\n                <input type=\"checkbox\" value=\"b\" onChange={radiusUseFunc} checked={state.style.b.check} />B<br />\n                <input type=\"range\" name=\"b\" value={dispBrValue.style.b.size} onChange={sizeFunc} />\n                <div>{dispBrValue.style.b.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"b\" onChange={unitFunc} defaultChecked />px\n                    <input type=\"radio\" value=\"%\" name=\"b\" onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"b\" onChange={unitFunc} />rem\n                </div>\n            </div>\n            <div>\n                <input type=\"checkbox\" value=\"c\" onChange={radiusUseFunc} checked={state.style.c.check} />C<br />\n                <input type=\"range\" name=\"c\" value={dispBrValue.style.c.size} onChange={sizeFunc} />\n                <div>{dispBrValue.style.c.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"c\" onChange={unitFunc} defaultChecked />px\n                    <input type=\"radio\" value=\"%\" name=\"c\" onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"c\" onChange={unitFunc} />rem\n                </div>\n            </div>\n            <div>\n                <input type=\"checkbox\" value=\"d\" onChange={radiusUseFunc} checked={state.style.d.check} />D<br />\n                <input type=\"range\" name=\"d\" value={dispBrValue.style.d.size} onChange={sizeFunc} />\n                <div>{dispBrValue.style.d.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"d\" onChange={unitFunc} defaultChecked />px\n                    <input type=\"radio\" value=\"%\" name=\"d\" onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"d\" onChange={unitFunc} />rem\n                </div>\n            </div>\n        </div>\n    )\n}","import { useState, useContext } from 'react';\nimport { Sheet } from './Integrate';\n\nexport function Preview() {\n    //ストアと繋ぐ\n    const [styleState] = useContext(Sheet)\n\n    //背景色のステート\n    const [bgColorState, setBgColorState] = useState('#edfee3')\n\n    //コンポーネントのスタイル\n    const style = {\n        width: '500px',\n        height: '300px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        border: '1px solid #ddd',\n        background: bgColorState\n    }\n\n    //ボタンのスタイルをストアから取得\n    const newStyle = styleState.newStyle\n    const buttonStyle = {\n        display: 'inline-block',\n        textDecoration: 'none',\n        ...newStyle.border.obj,\n        ...newStyle.borderRadius.obj,\n        ...newStyle.padding.obj,\n        ...newStyle.background.obj,\n        ...newStyle.otherStyle.obj,\n    }\n    \n    //背景色設定\n    const bgColorFunc = e => {\n        setBgColorState(e.target.value)\n    }\n\n    //イベントの停止\n    const stopLink = e => e.preventDefault();\n\n    return (\n        <div>\n            <div style={style}>\n                <a href=\"#\" onClick={stopLink} className=\"preview\" style={buttonStyle}>{styleState.character.character}</a>\n            </div>\n            <input type=\"color\" defaultValue={bgColorState} onChange={ bgColorFunc }/>\n        </div>\n    )\n}","import { useContext } from 'react';\nimport { Sheet } from './Integrate';\n\n\n//CSS抽出\nexport function Cascade() {\n    const [styleState] = useContext(Sheet)\n\n    const newStyle = styleState.newStyle;\n\n    const areaStyle = {\n        width: '20em',\n        height: '10em',\n    }\n\n    let chara = '';\n    for (let p in newStyle) {\n        if (newStyle[p].css !== undefined) {\n            chara = chara + newStyle[p].css;\n        }\n    }\n\n    const text = '.preview{\\n' + chara + '}';\n\n    return (\n        <div>\n            <p style={styleState.componentStyle.heading.a}>下のコードをコピーして貼り付けてください</p>\n            <textarea style={areaStyle} value={text} readOnly></textarea>\n        </div>\n    )\n}","import { useContext } from 'react';\nimport { Sheet } from '../Integrate';\n\nexport const Sample01 = () => {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    const sampleData = {\n        background: {\n            obj: { background: '#2c51db' },\n            css: 'background:#2c51db;\\n',\n            comp: { bgcolor: '#2c51db' }\n        },\n        padding: {\n            obj: { padding: '40px' },\n            css: 'padding:40px;\\n',\n            comp: {\n                size: '40',\n                unit: 'px',\n            }\n        },\n        borderRadius: {\n            obj: {},\n            css: '',\n            comp: {\n                horizonVertical: false,\n                style: {\n                    a: {\n                        check: false,\n                        size: '0',\n                        unit: 'px',\n                    },\n                    b: {\n                        check: false,\n                        size: '0',\n                        unit: 'px',\n                    },\n                    c: {\n                        check: false,\n                        size: '0',\n                        unit: 'px',\n                    },\n                    d: {\n                        check: false,\n                        size: '0',\n                        unit: 'px',\n                    },\n                },\n                sampling:true\n            }\n        },\n        otherStyle: {\n            obj: {\n                color: '#f00',\n                textShadow: '#FC0 1px 0 10px',\n            },\n            color: 'color:#f00;\\ntext-shadow:#FC0 1px 0 10px;\\n'\n        }\n    }\n\n    const selectSampleFunc = () => {\n        setStyleDispatch({ type: 'sample', value: sampleData });\n    }\n\n    return (\n        <div>\n            <a>サンプル01</a>\n            <button onClick={selectSampleFunc}>このサンプルを選択する</button>\n        </div>\n    )\n}","import { Sample01 } from './Sample01';\n\nexport const Sample = () => {\n    return (\n        <div>\n            <Sample01 />\n        </div>\n    )\n}","import React,{ useReducer } from 'react';\nimport { Character } from './blocks/Character';\nimport { Background } from './blocks/Background';\nimport { Padding } from './blocks/Padding';\nimport { Border } from './blocks/Border';\nimport { BorderRadius } from './blocks/BorderRadius';\nimport { Preview } from './Preview';\nimport { Cascade } from './Cascade';\nimport { Sample } from './samples/Sample';\nimport './style.css';\n\nexport const Sheet = React.createContext()\n\n//ステート\n//ステートには「プロパティ名:{プロパティ:値,...}というオブジェクトを渡して、Preview.jsで展開する。\n//作業開始前にまず何より「ステートの設計」を重視してやった方がいい。あとで全てのコンポーネントに支障が出る。\nconst initialState = {\n    character: { character: '送信' },\n    newStyle: {\n        background: {\n            obj: {}, //Preview用\n            css: '', //Cascade用\n            comp:{}, //コンポーネントの値 + Sample用\n        },\n        padding: {\n            obj: {}, //Preview用\n            css: '', //Cascade用\n            comp: {}, //コンポーネントの値 + Sample用\n        },\n        border: { //複数borderが指定されたオブジェクトが渡される。\n            obj: {}, //Preview用\n            css: '', //Cascade用\n            comp: {}, //コンポーネントの値 + Sample用\n        },\n        borderRadius: {\n            obj: {}, //Preview用\n            css: '', //Cascade用\n            comp: {}, //コンポーネントの値 + Sample用\n        },\n        otherStyle: {\n            obj: {}, //Preview用\n            css: '', //Cascade用\n            comp: {}, //コンポーネントの値 + Sample用\n        }\n    },\n    componentStyle: {\n        heading: {\n            a: {\n                    borderLeft: '4px solid #58d510',\n                    background: '#fff',\n                    paddingLeft: '.5em'\n            }\n        }\n    }\n}\n\n//レデューサー（CSSの取得のみにしたい）\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'br':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    borderRadius: action.value\n                }\n            }\n        case 'bd': \n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    border:action.value\n                }\n            }\n        case 'pd':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    padding: action.value\n                }\n            }\n        case 'bg':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    background: action.value\n                }\n            }\n        case 'ch':\n            return {\n                ...state,\n                character: action.value\n            }\n        case 'cu': \n            return {\n                ...state,\n                componentUnit: {\n                    ...state.componentUnit,\n                    ...action.value\n                }\n            }\n        case 'sample':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    ...action.value\n                }\n            }\n        defalut:\n            break;\n    }\n}\n\n//ステートと統合\nexport function Integrate() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <Sheet.Provider value={[state, dispatch]}>\n            <Sample />\n            <Preview />\n            <Cascade />\n            <div className=\"block\">\n                <Character />\n                <Background />\n                <Padding />\n                <Border />\n                <BorderRadius />\n            </div>\n        </Sheet.Provider>\n    )\n}","import { Integrate } from './components/Integrate';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Integrate />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}