{"version":3,"sources":["components/blocks/Character.js","components/blocks/Width.js","components/blocks/Color.js","components/blocks/Background.js","components/blocks/Padding.js","components/blocks/Border.js","components/blocks/BorderRadius.js","components/Preview.js","components/Cascade.js","components/samples/Sample01.js","components/samples/Sample02.js","components/samples/Sample.js","components/Integrate.js","App.js","reportWebVitals.js","index.js"],"names":["Character","useContext","Sheet","styleState","setStyleDispatch","chComp","character","chFunc","newState","obj","type","value","onChange","e","target","wdInitState","property","size","unit","wdState","Width","wdComp","newStyle","width","comp","wdCSS","css","useEffect","min","max","crInitState","color","crState","Color","crComp","crCSS","bgInitState","bgcolor","bgState","Background","bgComp","background","bgCSS","pdInitState","style","top","checked","right","bottom","left","sampling","pdState","Padding","pdComp","padding","sizeFunc","targetName","name","pdCSS","unitFunc","targetValue","array","i","length","push","directionFunc","stateStyles","brValue","p","replace","sameNum","every","checkedBoolean","onClick","bdInitState","check","bdState","Border","bdComp","border","num","indexOf","splice","bdCSS","forEach","tblr","newTblr","charAt","toUpperCase","slice","direction","toLowerCase","id","includes","brInitState","horizonVertical","a","b","c","d","brState","BorderRadius","brComp","borderRadius","radiusUseFunc","brCSS","Preview","useState","bgColorState","setBgColorState","buttonStyle","display","textAlign","textDecoration","className","href","preventDefault","defaultValue","Cascade","areaStyle","height","chara","undefined","text","html","componentStyle","heading","readOnly","boxShadow","Sample01","defaultData","init","sampleValidFunc","borderLeft","borderRight","Sample02","otherCSS","borderCSS","borderCheck","prop","object","cascade","component","simple","propLower","dir","abcd","am","split","unitCharacter","bbb","j","ddd","add","k","test","join","Sample","React","createContext","stateObj","data","initialState","defVal","paddingLeft","margin","reducer","state","action","componentUnit","Integrate","useReducer","dispatch","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3cc2110.chunk.js","sourcesContent":["import { useContext } from 'react';\nimport { Sheet } from '../Integrate';\n\nexport const chState = {\n    character: '送信',\n}\n\n//文言\nexport function Character() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    //ストアのデータを変数に代入\n    const chComp = styleState.character;\n\n    const characterFunc = e => {\n        const newState = {\n            ...styleState,\n            character: e.target.value,\n        }\n        chFunc(newState);\n    }\n\n    const chFunc = (newState = chComp) => {\n        const obj = {}\n        obj['character'] = newState.character\n        setStyleDispatch({ type: 'ch', value: obj });\n    }\n\n    return (\n        <div>\n            <p>ボタンに入る文字</p>\n            <input type=\"text\" value={chComp.character} onChange={characterFunc} />\n        </div>\n    )\n}\n","import { useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//初期値\nexport const wdInitState = {\n    property: 'width',\n    value: {\n        size: '0',\n        unit: 'px',\n    }\n}\n//ストアで管理するステートの値\nexport const wdState = {\n    property: 'width',\n    value: {\n        size: '300',\n        unit: 'px',\n    }\n}\n\n//余白\nexport function Width() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    //ストアを変数に代入\n    const wdComp = styleState.newStyle.width.comp;\n\n    const sizeFunc = e => {\n        const newState = {\n            ...wdComp,\n            size: e.target.value,\n        }\n        wdCSS(newState);\n    }\n\n    const wdCSS = (newState = wdComp) => {\n        //オブジェクトで示す\n        const obj = {}\n        obj['width'] = `${newState.size}${newState.unit}`\n\n        //CSSで示す\n        let css = 'width:';\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = newState\n\n        //ストアへ渡す形を作る\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n\n        setStyleDispatch({ type: 'wd', value })\n    }\n\n    useEffect(() => {\n        wdCSS()\n    }, [])\n\n    return (\n        <div>\n            <p>幅</p>\n            <input type=\"range\" value={wdComp.size} min=\"0\" max=\"600\" onChange={sizeFunc} />\n            <div>{wdComp.size}px</div>\n        </div>\n    )\n}\n\n","import { useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//初期値\nexport const crInitState = {\n    property: 'color',\n    value: {\n        color: '#666666'\n    }\n}\n//ストアで管理するステートの値\nexport const crState = {\n    property: 'color',\n    value: {\n        color: '#ffffff'\n    }\n}\n\n//余白\nexport function Color() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    //ストアを変数に代入\n    const crComp = styleState.newStyle.color.comp;\n\n    const colorFunc = e => {\n        const newState = {\n            ...crComp,\n            color: e.target.value,\n        }\n        crCSS(newState);\n    }\n\n    const crCSS = (newState = crComp) => {\n        //オブジェクトで示す\n        const obj = {}\n        obj['color'] = newState.color\n\n        //CSSで示す\n        let css = 'color:';\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = newState\n\n        //CSSの状態をレデューサーへ（あるいはアクションクリエイターへ）渡す\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n        setStyleDispatch({ type: 'cr', value });\n    }\n\n    useEffect(() => { crCSS() }, [])\n\n    return (\n        <div>\n            <p>文字色</p>\n            <div><input type=\"color\" value={crComp.color} onChange={colorFunc} /></div>\n            <div>{crComp.color}</div>\n        </div>\n    )\n}\n","import { useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//初期値\nexport const bgInitState = {\n    property: 'background',\n    value: {\n        bgcolor: '#000000',\n    }\n}\n//デフォルト値：ストアで管理するステートの値\nexport const bgState = {\n    property: 'background',\n    value: {\n        bgcolor: '#189bdc',\n    }\n}\n\n//背景色\nexport function Background() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    //ストアを変数に代入\n    const bgComp = styleState.newStyle.background.comp;\n\n    const bgColorFunc = e => {\n        const newState = {\n            ...bgComp,\n            bgcolor: e.target.value,\n        }\n        bgCSS(newState);\n    }\n\n    const bgCSS = (newState = bgComp) => {\n        //オブジェクトで示す\n        const obj = {}\n        obj['background'] = newState.bgcolor\n\n        //CSSで示す\n        let css = 'background:';\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = { ...newState }\n\n        //CSSの状態をレデューサーへ（あるいはアクションクリエイターへ）渡す\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n        setStyleDispatch({ type: 'bg', value });\n    }\n\n    useEffect(() => { bgCSS() }, [])\n    \n    return (\n        <div>\n            <p>ボタンの背景色</p>\n            <div><input type=\"color\" value={bgComp.bgcolor} onChange={bgColorFunc} /></div>\n            <div>{bgComp.bgcolor}</div>\n        </div>\n    )\n}\n","import { useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//初期値\nexport const pdInitState = {\n    property: 'padding',\n    value: {\n        style: {\n            top: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            right: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            bottom: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            left: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n        },\n        sampling: false,\n    }\n}\n\n//ストアで管理するステートの値\nexport const pdState = {\n    property: 'padding',\n    value: {\n        style: {\n            top: {\n                checked: true,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            right: {\n                checked: true,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            bottom: {\n                checked: true,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            left: {\n                checked: true,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n        },\n        sampling: false,\n    }\n}\n\n//余白\nexport function Padding() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    //ストアを変数に代入\n    const pdComp = styleState.newStyle.padding.comp;\n\n    const sizeFunc = e => {\n        const targetName = e.target.name;\n        const newState = {\n            ...pdComp,\n            style:{\n                ...pdComp.style,\n                [targetName]: {\n                    ...pdComp.style[targetName],\n                    size: e.target.value,\n                }\n            },\n            sampling:false\n        }\n        pdCSS(newState);\n    }\n\n    const unitFunc = e => {\n        const targetName = e.target.name;\n        const targetValue = e.target.value;\n\n        const array = []\n        for (let i = 0; i < pdComp.style[targetName].unit.length; i++) {\n            if (pdComp.style[targetName].unit[i].value === targetValue) {\n                array.push({ value: pdComp.style[targetName].unit[i].value, checked: true })\n            }\n            else {\n                array.push({ value: pdComp.style[targetName].unit[i].value, checked: false })\n            }\n        }\n\n        const newState = {\n            ...pdComp,\n            style: {\n                ...pdComp.style,\n                [targetName]: {\n                    ...pdComp.style[targetName],\n                    unit: array,\n                }\n            },\n            sampling: false\n        }\n\n        pdCSS(newState);\n    }\n\n    const directionFunc = e => {\n        const targetName = e.target.value;\n        const newState = {\n            ...pdComp,\n            style: {\n                ...pdComp.style,\n                [targetName]: {\n                    ...pdComp.style[targetName],\n                    checked: e.target.checked,\n                }\n            },\n            sampling: false\n        }\n        pdCSS(newState);\n    }\n\n    const pdCSS = (newState = pdComp) => {\n        const stateStyles = newState.style;\n        let brValue = '';\n        let array = []\n        let size, unit;\n        for (let p in stateStyles) {\n            if (stateStyles[p].checked === false) {\n                array.push(0)\n                continue;\n            }\n            for (let i = 0; i < stateStyles[p].unit.length; i++) {\n                if (stateStyles[p].unit[i].checked === true) {\n                    size = stateStyles[p].size\n                    unit = stateStyles[p].unit[i].value;\n                    if (unit === 'rem') size = size.replace(/(\\d)$/g, '.$1') //rem対応の有無\n                    size === '0' || size === '.0' ? array.push(`0`) : array.push(`${size}${unit}`);\n                }\n            }\n        }\n        //全て同じ値指定か検索\n        const sameNum = array.every(value => {\n            return value === array[0];\n        })\n        if (sameNum === true) {\n            brValue = ` ${array[0]}`\n        }\n        else {\n            for (let i = 0; i < array.length; i++) {\n                brValue = `${brValue} ${array[i]}`\n            }\n        }\n\n        //オブジェクトで示す\n        let obj = {}\n        obj['padding'] = brValue;\n\n\n        //CSSで示す\n        let css = 'padding:';\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = newState\n\n        //チェックが全てfalseの場合、CSSに反映させず、何も表示させないようにする\n        let checkedBoolean;\n        for (let p in stateStyles) {\n            if (stateStyles[p].checked === true) {\n                checkedBoolean = 1;\n                break;\n            }\n            else if (stateStyles[p].checked === false) {\n                checkedBoolean = 0;\n            }\n        }\n        if (checkedBoolean === 0) {\n            obj = {}\n            css = ''\n        }\n        \n\n        //ストアへ渡す形を作る\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n\n        setStyleDispatch({ type: 'pd', value })\n    }\n\n    useEffect(() => {\n        pdCSS()\n    }, [])\n\n    return (\n        <div>\n            <p>余白</p>\n            <div>\n                <input type=\"checkbox\" name=\"\" value=\"top\" checked={pdComp.style.top.checked} onClick={directionFunc} />上<br />\n                <input type=\"range\" name=\"top\" value={pdComp.style.top.size} min=\"0\" max=\"100\" onChange={sizeFunc} /><br />\n                <div>{pdComp.style.top.unit[2].checked === true ? `${pdComp.style.top.size.replace(/(\\d)$/g, '.$1')}` : pdComp.style.top.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"top\" checked={pdComp.style.top.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"top\" checked={pdComp.style.top.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"top\" checked={pdComp.style.top.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n                <input type=\"checkbox\" name=\"\" value=\"bottom\" checked={pdComp.style.bottom.checked} onClick={directionFunc} />下<br />\n                <input type=\"range\" name=\"bottom\"  value={pdComp.style.bottom.size} min=\"0\" max=\"100\" onChange={sizeFunc} /><br />\n                <div>{pdComp.style.bottom.unit[2].checked === true ? `${pdComp.style.bottom.size.replace(/(\\d)$/g, '.$1')}` : pdComp.style.bottom.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"bottom\" checked={pdComp.style.bottom.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"bottom\" checked={pdComp.style.bottom.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"bottom\" checked={pdComp.style.bottom.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n                <input type=\"checkbox\" name=\"\" value=\"left\" checked={pdComp.style.left.checked} onClick={directionFunc} />左<br />\n                <input type=\"range\" name=\"left\"  value={pdComp.style.left.size} min=\"0\" max=\"100\" onChange={sizeFunc} /><br />\n                <div>{pdComp.style.left.unit[2].checked === true ? `${pdComp.style.left.size.replace(/(\\d)$/g, '.$1')}` : pdComp.style.left.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"left\" checked={pdComp.style.left.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"left\" checked={pdComp.style.left.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"left\" checked={pdComp.style.left.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n                <input type=\"checkbox\" name=\"\" value=\"right\" checked={pdComp.style.right.checked} onClick={directionFunc} />右<br />\n                <input type=\"range\" name=\"right\"  value={pdComp.style.right.size} min=\"0\" max=\"100\" onChange={sizeFunc} /><br />\n                <div>{pdComp.style.right.unit[2].checked === true ? `${pdComp.style.right.size.replace(/(\\d)$/g, '.$1')}` : pdComp.style.right.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"right\" checked={pdComp.style.right.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"right\" checked={pdComp.style.right.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"right\" checked={pdComp.style.right.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import { useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//初期値\nexport const bdInitState = {\n    property: 'border',\n    value: {\n        check: [],\n        size: '0',\n        color: '#000000',\n    }\n}\n//ストアで管理するステートの値\nexport const bdState = {\n    property: 'border',\n    value: {\n        check: ['left'],\n        size: '3',\n        color: '#ff0000',\n    }\n}\n\n//ボーダー\nexport function Border() {\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    //ストアのデータを変数に代入\n    const bdComp = styleState.newStyle.border.comp;\n\n    //方向\n    const directionFunc = e => {\n        const [...check] = bdComp.check;\n        const num = check.indexOf(e.target.value);\n        if (num === -1) {\n            check.push(e.target.value)\n        }\n        else {\n            check.splice(num, 1)\n        }\n        const newState = {\n            ...bdComp,\n            check: check,\n        }\n        bdCSS(newState);\n    }\n\n    //サイズ\n    const sizeFunc = e => {\n        const newState = {\n            ...bdComp,\n            size: e.target.value,\n        }\n        bdCSS(newState);\n   }\n\n    //カラー\n    const colorFunc = e => {\n        const newState = {\n            ...bdComp,\n            color: e.target.value,\n        }\n        bdCSS(newState);\n    }\n\n    //CSS\n    function bdCSS(newState = bdComp) {\n        //オブジェクトで示す。\n        let obj = {}\n        if (newState.check.length === 4) {\n            obj['border'] = `${newState.size}px solid ${newState.color}`\n        }\n        else if (1 < newState.check.length < 4) {\n            newState.check.forEach(tblr => {\n                const newTblr = tblr.charAt(0).toUpperCase() + tblr.slice(1);\n                obj['border' + newTblr] = `${newState.size}px solid ${newState.color}`\n            })\n        }\n        else if (newState.check.length === 0) {\n            obj = {}\n        }\n        if (newState.size === 0) {\n            obj = {}\n        }\n\n        //CSSで示す\n        let css = '';\n        for (let property in obj) {\n            let direction = property.replace(/border/g, '').toLowerCase();\n            direction === '' ? direction = 'border' : direction = `border-${direction}`;\n            css = css + direction + ': ' + obj[property] + ';\\n';\n        }\n        \n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = newState\n\n        //ストアへ渡す形を作る\n        const value = {\n            obj,\n            css,\n            comp\n        }\n        \n        setStyleDispatch({ type: 'bd', value });\n    }\n\n    useEffect(() => { bdCSS() }, [])\n    \n    return (\n        <div>\n            <p>ボーダー</p>\n            <div>\n                <input type=\"checkbox\" name=\"\" value=\"top\" id=\"borderTop\" checked={bdComp.check.includes('top') ? true : false} onClick={directionFunc} />上\n                <input type=\"checkbox\" name=\"\" value=\"bottom\" id=\"borderBottom\" checked={bdComp.check.includes('bottom') ? true : false} onClick={directionFunc} />下\n                <input type=\"checkbox\" name=\"\" value=\"left\" id=\"borderLeft\" checked={bdComp.check.includes('left') ? true : false} onClick={directionFunc} />左\n                <input type=\"checkbox\" name=\"\" value=\"right\" id=\"borderRight\" checked={bdComp.check.includes('right') ? true : false} onClick={directionFunc} />右\n            </div>\n            <input type=\"range\" value={bdComp.size} min=\"0\" max=\"10\" onChange={sizeFunc} />\n            <div>{bdComp.size}px</div>\n            <input type=\"color\" value={bdComp.color} onChange={colorFunc} />\n            <div>{bdComp.color}</div>\n        </div>\n    )\n}\n","import { useContext, useEffect } from 'react';\nimport { Sheet } from '../Integrate';\n\n//初期値\nexport const brInitState = {\n    property: 'borderRadius',\n    value: {\n        horizonVertical: false,\n        style: {\n            a: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            b: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            c: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            d: {\n                checked: false,\n                size: '0',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n        },\n        sampling: false\n    }\n}\n//ストアで管理するステートの値\nexport const brState = {\n    property: 'borderRadius',\n    value: {\n        horizonVertical: false,\n        style: {\n            a: {\n                checked: true,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            b: {\n                checked: true,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            c: {\n                checked: false,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n            d: {\n                checked: false,\n                size: '10',\n                unit: [\n                    { value: 'px', checked: true },\n                    { value: '%', checked: false },\n                    { value: 'rem', checked: false },\n                ],\n            },\n        },\n        sampling: false\n    }\n}\n\n//角丸\n//https://coliss.com/articles/build-websites/operation/css/css-border-radius-can-do-that.html\nexport function BorderRadius() {\n    //CSSレデューサーを取得\n    const [styleState, setStyleDispatch] = useContext(Sheet);\n\n    //ストアのデータを変数に代入\n    const brComp = styleState.newStyle.borderRadius.comp;\n\n    //水平垂直\n    /* const horizonVerticalFunc = e => {\n        const newState = {\n            ...brComp,\n            horizonVertical: e.target.checked\n        }\n    } */\n\n    //各頂点を使うかどうか\n    const radiusUseFunc = e => {\n        //チェックされた要素がaかbかを判断する\n        const targetName = e.target.value;\n        const newState = {\n            ...brComp,\n            style: {\n                ...brComp.style,\n                [targetName]: {\n                    ...brComp.style[targetName],\n                    checked: e.target.checked\n                }\n            },\n            sampling: false\n        }\n        brCSS(newState);\n    }\n\n    //サイズの調整\n    const sizeFunc = e => {\n        const targetName = e.target.name;\n        const newState = {\n            ...brComp,\n            style: {\n                ...brComp.style,\n                [targetName]: {\n                    ...brComp.style[targetName],\n                    size: e.target.value\n                }\n            },\n            sampling: false\n        }\n        brCSS(newState);\n    }\n\n    //単位の設定\n    const unitFunc = e => {\n        const targetName = e.target.name;\n        const targetValue = e.target.value;\n\n        const array = []\n        for (let i = 0; i < brComp.style[targetName].unit.length; i++){\n            if (brComp.style[targetName].unit[i].value === targetValue) {\n                array.push({ value: brComp.style[targetName].unit[i].value, checked: true })\n            }\n            else {\n                array.push({ value: brComp.style[targetName].unit[i].value, checked: false })\n            }\n        }\n\n        const newState = {\n            ...brComp,\n            style: {\n                ...brComp.style,\n                [targetName]: {\n                    ...brComp.style[targetName],\n                    unit: array\n                }\n            },\n            sampling: false\n        }\n\n        brCSS(newState);\n    }\n\n    //最終的なCSSの抽出\n    const brCSS = (newState = brComp) => {\n        const stateStyles = newState.style;\n        let brValue = '';\n        let array = []\n        let size, unit;\n        for (let p in stateStyles) {\n            if (stateStyles[p].checked === false) {\n                array.push(0)\n                continue;\n            }\n            for (let i = 0; i < stateStyles[p].unit.length; i++) {\n                if (stateStyles[p].unit[i].checked === true) {\n                    size = stateStyles[p].size\n                    unit = stateStyles[p].unit[i].value;\n                    size === '0' ? array.push(`${stateStyles[p].size}`) : array.push(`${stateStyles[p].size}${unit}`);\n                }\n            }\n        }\n        //全て同じ値指定か検索\n        const sameNum = array.every(value => {\n            return value === array[0];\n        })\n        if (sameNum === true) {\n            brValue = ` ${array[0]}`\n        }\n        else {\n            for (let i = 0; i < array.length; i++) {\n                brValue = `${brValue} ${array[i]}`\n            }\n        }\n\n        //オブジェクトで示す\n        let obj = {}\n        obj['borderRadius'] = brValue;\n\n        //CSSで示す\n        let css = 'border-radius:'\n        for (let property in obj) {\n            css = css + obj[property];\n        }\n        css = `${css};\\n`\n\n        //各項目のステートをレデューサーへ送る準備を示す\n        const comp = newState\n\n        //チェックが全てfalseの場合、CSSに反映させず、何も表示させないようにする\n        let checkedBoolean;\n        for (let p in stateStyles) {\n            if (stateStyles[p].checked === true) {\n                checkedBoolean = 1;\n                break;\n            }\n            else if (stateStyles[p].checked === false) {\n                checkedBoolean = 0;\n            }\n        }\n        if (checkedBoolean === 0) {\n            obj = {}\n            css = ''\n        }\n\n        //ストアへ渡す形を作る\n        const value = {\n            obj,\n            css,\n            comp,\n        }\n\n        setStyleDispatch({ type: 'br', value })\n    }\n\n    useEffect(() => { brCSS() }, []);\n\n    return (\n        <div>\n            <p>角丸</p>\n            {/* <div>\n                <input type=\"checkbox\" onClick={horizonVerticalFunc} />「水平半径/垂直半径」を使用する。\n            </div> */}\n            <div>\n                <input type=\"checkbox\" value=\"a\" onChange={radiusUseFunc} checked={brComp.style.a.checked} />A<br />\n                <input type=\"range\" name=\"a\" value={brComp.style.a.size} onChange={sizeFunc} />\n                <div>{brComp.style.a.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"a\" checked={brComp.style.a.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"a\" checked={brComp.style.a.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"a\" checked={brComp.style.a.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n            </div>\n            <div>\n                <input type=\"checkbox\" value=\"b\" onChange={radiusUseFunc} checked={brComp.style.b.checked} />B<br />\n                <input type=\"range\" name=\"b\" value={brComp.style.b.size} onChange={sizeFunc} />\n                <div>{brComp.style.b.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"b\" checked={brComp.style.b.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"b\" checked={brComp.style.b.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"b\" checked={brComp.style.b.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n            </div>\n            <div>\n                <input type=\"checkbox\" value=\"c\" onChange={radiusUseFunc} checked={brComp.style.c.checked} />C<br />\n                <input type=\"range\" name=\"c\" value={brComp.style.c.size} onChange={sizeFunc} />\n                <div>{brComp.style.c.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"c\" checked={brComp.style.c.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"c\" checked={brComp.style.c.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"c\" checked={brComp.style.c.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n            </div>\n            <div>\n                <input type=\"checkbox\" value=\"d\" onChange={radiusUseFunc} checked={brComp.style.d.checked} />D<br />\n                <input type=\"range\" name=\"d\" value={brComp.style.d.size} onChange={sizeFunc} />\n                <div>{brComp.style.d.size}</div>\n                <div>\n                    <input type=\"radio\" value=\"px\" name=\"d\" checked={brComp.style.d.unit[0].checked} onChange={unitFunc} />px\n                    <input type=\"radio\" value=\"%\" name=\"d\" checked={brComp.style.d.unit[1].checked} onChange={unitFunc} />%\n                    <input type=\"radio\" value=\"rem\" name=\"d\" checked={brComp.style.d.unit[2].checked} onChange={unitFunc} />rem\n                </div>\n            </div>\n        </div>\n    )\n}","import { useState, useContext } from 'react';\nimport { Sheet } from './Integrate';\n\nexport function Preview() {\n    //ストアと繋ぐ\n    const [styleState] = useContext(Sheet)\n\n    //背景色のステート\n    const [bgColorState, setBgColorState] = useState('#edfee3')\n\n    //コンポーネントのスタイル\n    const style = {\n        background: bgColorState,\n    }\n\n    //ボタンのスタイルをストアから取得\n    const newStyle = styleState.newStyle\n    let buttonStyle = {\n        display: 'block',\n        textAlign: 'center',\n        textDecoration: 'none',\n    }\n    for (let p in newStyle) {\n        buttonStyle = {\n            ...buttonStyle,\n            ...newStyle[p].obj\n        }\n    }\n\n    //背景色設定\n    const bgColorFunc = e => {\n        setBgColorState(e.target.value)\n    }\n\n    //イベントの停止\n    const stopLink = e => e.preventDefault();\n\n    return (\n        <div className=\"c-preview\">\n            <div className=\"c-preview__box\" style={style}>\n                <a href=\"/\" onClick={stopLink} className=\"preview\" style={buttonStyle}>{styleState.character.character}</a>\n            </div>\n            <input type=\"color\" defaultValue={bgColorState} onChange={ bgColorFunc }/>\n        </div>\n    )\n}","import { useContext } from 'react';\nimport { Sheet } from './Integrate';\n\n\n//CSS抽出\nexport function Cascade() {\n    const [styleState] = useContext(Sheet)\n\n    const newStyle = styleState.newStyle;\n\n    const areaStyle = {\n        width: '20em',\n        height: '10em',\n    }\n\n    let chara = '';\n    const buttonStyle = 'display:block;\\ntext-align:center;\\ntext-decoration:none;\\n'\n    for (let p in newStyle) {\n        if (newStyle[p].css !== undefined) {\n            chara = chara + newStyle[p].css;\n        }\n    }\n    chara = chara + buttonStyle;\n\n    const text = '.preview{\\n' + chara + '}';\n    const html = '<a href=\"#\" class=\"preview\">' + styleState.character.character + '</a>'\n\n    return (\n        <div className=\"c-cascade\">\n            <p style={styleState.componentStyle.heading.a}>下のコードをコピーして貼り付けてください</p>\n            <div>\n                <textarea style={areaStyle} value={text} readOnly></textarea>\n            </div>\n            <div>\n                <textarea style={areaStyle} value={html} readOnly></textarea>\n            </div>\n        </div>\n    )\n}","import { useContext } from 'react';\nimport { init } from '../Integrate';\nimport { Sheet } from '../Integrate';\nimport { sampleValidFunc } from './Sample';\n\n//サンプルデータのCSS in JS\nconst style = {\n    width: '200px',\n    background: '#2c51db',\n    padding: '40px 30px',\n    borderRadius:'20px',\n    border:'5px solid #ffffff',\n    color: '#f00',\n    boxShadow: '#FC0 10px 10px 10px',\n    textAlign: 'center',\n    textDecoration: 'none',\n    display: 'block',\n}\n\n\nexport const Sample01 = () => {\n    const [, setStyleDispatch] = useContext(Sheet);\n    const defaultData = init()\n\n    const selectSampleFunc = () => {\n        sampleValidFunc(defaultData, style)\n        setStyleDispatch({ type: 'sample', value: defaultData });\n    }\n\n    return (\n        <div className=\"c-sample c-sample01\">\n            <a href=\"/\" style={style}>サンプル01</a>\n            <button onClick={selectSampleFunc} className=\"c-sample__button\">このサンプルを選択する</button>\n        </div>\n    )\n}","import { useContext } from 'react';\nimport { init } from '../Integrate';\nimport { Sheet } from '../Integrate';\nimport { sampleValidFunc } from './Sample';\n\n//サンプルデータのCSS in JS\nconst style = {\n    width: '150px',\n    background: '#e4f500',\n    padding: '10px 5px',\n    borderLeft: '3px solid #Df00fE',\n    borderRight: '3px solid #Df00fE',\n    color: '#666',\n    textAlign:'center',\n    textDecoration: 'none',\n    display:'block'\n}\n\n\nexport const Sample02 = () => {\n    const [, setStyleDispatch] = useContext(Sheet);\n    const defaultData = init()\n\n    const selectSampleFunc = () => {\n        sampleValidFunc(defaultData, style)\n        setStyleDispatch({ type: 'sample', value: defaultData });\n    }\n\n    return (\n        <div className=\"c-sample c-sample02\">\n            <a href=\"/\" style={style}>サンプル02</a>\n            <button onClick={selectSampleFunc} className=\"c-sample__button\">このサンプルを選択する</button>\n        </div>\n    )\n}","import { Sample01 } from './Sample01';\nimport { Sample02 } from './Sample02';\n\nexport const sampleValidFunc = (defaultData, style) => {\n    let otherCSS = []\n    let borderCSS = '';\n    const borderCheck = [];\n    //変数styleをステートへ送信できる形にする\n    for (let prop in style) {\n        //変数\n        let object, cascade, component;\n        //関数\n        const simple = (prop, object, cascade, component) => {\n            defaultData[prop]['obj'] = object;\n            defaultData[prop]['css'] = cascade\n            defaultData[prop]['comp'] = component\n        }\n        //各プロパティのステートを抽出。\n        switch (prop) {\n            case 'width': {\n                //オブジェクト\n                object = { [prop]: style[prop] }\n                //スタイルシート\n                cascade = `${prop}: ${style[prop]};\\n`\n                //コンポーネントで使用する値\n                let size = style[prop].replace(/(\\d+).*/g, '$1')\n                let unit = style[prop].replace(/\\d+(.*)/g, '$1')\n                component = {\n                    size,\n                    unit\n                }\n                //追加\n                simple(prop, object, cascade, component)\n                break;\n            }\n\n            case 'border':\n            case 'borderTop':\n            case 'borderBottom':\n            case 'borderLeft':\n            case 'borderRight': \n                if (prop === 'border') {\n                    //オブジェクト\n                    object = { [prop]: style[prop] }\n                    //スタイルシート\n                    cascade = `${prop}: ${style[prop]};\\n`\n                    //コンポーネントで使用する値\n                    const check = ['top', 'bottom', 'left', 'right'];\n                    const size = style[prop].replace(/.*?(\\d+?).*/g, '$1');\n                    const color = style[prop].replace(/^.*(#[0-9a-zA-Z]*)/g, '$1');\n                    component = {\n                        ...component,\n                        check,\n                        size,\n                        color\n                    };\n                    simple(prop, object, cascade, component)\n                }\n                else {\n                    //オブジェクト\n                    object = {\n                        ...object,\n                        [prop]: style[prop]\n                    }\n                    //スタイルシート\n                    let propLower = prop.replace(/([A-Z])/g, '-$1').toLowerCase();\n                    borderCSS = `${borderCSS + propLower}: ${style[prop]};\\n`\n                    //コンポーネントで使用する値\n                    const dir = prop.replace(/border(.+)/g, '$1').toLowerCase();\n                    borderCheck.push(dir);\n                    const size = style[prop].replace(/.*?(\\d+?).*/g, '$1');\n                    const color = style[prop].replace(/.*?(#[0-9a-zA-Z]+).*/g, '$1');\n                    component = {\n                        ...component,\n                        check: borderCheck,\n                        size,\n                        color\n                    };\n                    //追加\n\n                    defaultData['border'] = {\n                        ...defaultData.border,\n                        obj: {\n                            ...defaultData.border.obj,\n                            ...object\n                        },\n                        css: borderCSS,\n                        comp: {\n                            ...defaultData.border.comp,\n                            ...component\n                        },\n                    };\n                }\n                break;\n\n            case 'background': {\n                //オブジェクト\n                object = { [prop]: style[prop] }\n                //スタイルシート\n                cascade = `${prop}: ${style[prop]};\\n`\n                //コンポーネントで使用する値\n                if (style[prop].length < 6) {\n                    const bgcolor = style[prop].replace(/#([0-9a-zA-Z])([0-9a-zA-Z])([0-9a-zA-Z])/g, '#$1$1$2$2$3$3')\n                    component = { bgcolor }\n                }\n                else {\n                    component = { bgcolor: style[prop] }\n                }\n                //追加\n                simple(prop, object, cascade, component)\n                break;\n            }\n\n            case 'color': {\n                //オブジェクト\n                object = { [prop]: style[prop] }\n                //スタイルシート\n                cascade = `${prop}: ${style[prop]};\\n`\n                //コンポーネントで使用する値\n                if (style[prop].length < 6) {\n                    const color = style[prop].replace(/#([0-9a-zA-Z])([0-9a-zA-Z])([0-9a-zA-Z])/g, '#$1$1$2$2$3$3')\n                    component = { color }\n                }\n                else {\n                    component = { bgcolor: style[prop] }\n                }\n                //追加\n                simple(prop, object, cascade, component)\n                break;\n            }\n\n            case 'padding': {\n                //オブジェクト\n                object = { [prop]: style[prop] }\n                //スタイルシート\n                cascade = `${prop}: ${style[prop]};\\n`\n                //コンポーネントで使用する値\n                component = {};\n                component['style'] = {};\n                const abcd = ['top', 'right', 'bottom', 'left',]\n                let am = style[prop].split(' ');\n                switch (am.length) {\n                    case 1:\n                        for (let i = 0; i < 3; i++) {\n                            am.push(am[0])\n                        }\n                        break;\n                    case 2:\n                        am.push(am[0])\n                        am.push(am[1])\n                        break;\n                    case 3:\n                        am.push(am[1])\n                        break;\n                    default:\n                        break;\n                }\n                for (let i = 0; i < am.length; i++) {\n                    component['style'][abcd[i]] = {}\n                    let size = am[i].replace(/(\\d+).*/g, '$1')\n                    let unitCharacter = am[i].replace(/\\d+(.*)/g, '$1')\n                    const bbb = ['px', '%', 'rem']\n                    let unit = [];\n                    let checked;\n                    for (let j = 0; j < bbb.length; j++) {\n                        let ddd;\n                        if (size === '0') {\n                            unit = [\n                                { value: 'px', checked: true },\n                                { value: '%', checked: false },\n                                { value: 'rem', checked: false },\n                            ]\n                            checked = false;\n                            break;\n                        }\n                        if (bbb[j] === unitCharacter) {\n                            ddd = { value: unitCharacter, checked: true }\n                            unit.push(ddd);\n                        }\n                        else {\n                            ddd = { value: bbb[j], checked: false }\n                            unit.push(ddd);\n                        }\n                        checked = true;\n                    }\n\n                    const add = {\n                        checked,\n                        size,\n                        unit,\n                    }\n\n                    component['style'][abcd[i]] = add\n                }\n                component['sampling'] = true;\n\n                //追加\n                simple(prop, object, cascade, component)\n                break;\n            }\n\n            case 'borderRadius': {\n                object = { [prop]: style[prop] }\n                //スタイルシート\n                let propLower = prop.replace(/([A-Z])/g, '-$1').toLowerCase();\n                cascade = `${propLower}: ${style[prop]};\\n`\n                //コンポーネントで使用する値\n                component = {};\n                component['style'] = {};\n                const abcd = ['a', 'b', 'c', 'd',]\n                let am = style[prop].split(' ');\n                for (let i = 0; i < am.length; i++) {\n                    component['style'][abcd[i]] = {}\n                    let size = am[i].replace(/(\\d+).*/g, '$1')\n                    let unitCharacter = am[i].replace(/\\d+(.*)/g, '$1')\n                    const bbb = ['px', '%', 'rem'];\n                    let unit = [];\n                    let checked;\n                    for (let j = 0; j < bbb.length; j++) {\n                        let ddd;\n                        if (size === '0') {\n                            unit = [\n                                { value: 'px', checked: true },\n                                { value: '%', checked: false },\n                                { value: 'rem', checked: false },\n                            ]\n                            checked = false;\n                            break;\n                        }\n                        if (bbb[j] === unitCharacter) {\n                            ddd = { value: unitCharacter, checked: true }\n                            unit.push(ddd);\n                        }\n                        else {\n                            ddd = { value: bbb[j], checked: false }\n                            unit.push(ddd);\n                        }\n                        checked = true;\n                    }\n\n                    const add = {\n                        checked,\n                        size,\n                        unit,\n                    }\n\n                    component['style'][abcd[i]] = add\n\n                    //値が一つのみ割り当てられている場合\n                    if (am.length === 1) {\n                        for (let k = i + 1; k < abcd.length; k++) {\n                            component['style'][abcd[k]] = add\n                        }\n                        break;\n                    }\n                }\n                component['sampling'] = true;\n                component['horizonVertical'] = false;\n                //追加\n                simple(prop, object, cascade, component)\n                break;\n            }\n\n            default: {\n                //オブジェクトで示す\n                defaultData['otherStyle'].obj = {\n                    ...defaultData['otherStyle'].obj,\n                    [prop]: style[prop]\n                };\n                //スタイルで示す\n                let propLower;\n                if (/[A-Z]/g.test(prop)) {\n                    propLower = prop.replace(/([A-Z])/g, '-$1').toLowerCase();\n                }\n                else {\n                    propLower = prop\n                }\n                otherCSS.push(`${propLower}:${style[prop]};\\n`);\n                defaultData['otherStyle'].css = otherCSS.join('');\n                //各項目\n                defaultData['otherStyle'].comp = {\n                    ...defaultData['otherStyle'].comp,\n                    [prop]: style[prop]\n                }\n                break;\n            }\n        }\n    }\n}\n\nexport const Sample = () => {\n    return (\n        <div className=\"c-samples\">\n            <Sample01 />\n            <Sample02 />\n        </div>\n    )\n}","/* eslint-disable default-case */\nimport React,{ useReducer } from 'react';\nimport { Character, chState } from './blocks/Character';\nimport { Width, wdState, wdInitState } from './blocks/Width';\nimport { Color, crState, crInitState } from './blocks/Color';\nimport { Background, bgState, bgInitState } from './blocks/Background';\nimport { Padding, pdState, pdInitState } from './blocks/Padding';\nimport { Border, bdState, bdInitState } from './blocks/Border';\nimport { BorderRadius, brState, brInitState } from './blocks/BorderRadius';\nimport { Preview } from './Preview';\nimport { Cascade } from './Cascade';\nimport { Sample } from './samples/Sample';\nimport './style.css';\n\nexport const Sheet = React.createContext()\n\n//初期化設定の関数\nexport const init = () => {\n    const states = [wdInitState, crInitState, bgInitState, pdInitState, bdInitState, brInitState];\n    const stateObj = {};\n    states.forEach(data => {\n        stateObj[data.property] = {\n            obj: {}, //Preview用\n            css: '', //Cascade用\n            comp: data.value, //コンポーネントの値 + Sample用\n        }\n    })\n    stateObj['otherStyle'] = {\n        obj: {},\n        css: '',\n        comp: {},\n    }\n    return stateObj;\n}\n\n//下記関数はexport const にするとSampleで呼び出す際にエラーになる。理由を調べておく\n//デフォルト値設定の関数\nexport const defVal = () => {\n    const states = [wdState, crState, bgState, pdState, bdState, brState];\n    const stateObj = {};\n    states.forEach(data => {\n        stateObj[data.property] = {\n            obj: {}, //Preview用\n            css: '', //Cascade用\n            comp: data.value, //コンポーネントの値 + Sample用\n        }\n    })\n    stateObj['otherStyle'] = {\n            obj: { },\n            css: '',\n            comp: { },\n    }\n    return stateObj;\n}\n\n//新しいスタイル:newStyle\nexport const newStyle = defVal();\n\n//ステート\n//ステートには「プロパティ名:{プロパティ:値,...}というオブジェクトを渡して、Preview.jsで展開する。\n//作業開始前にまず何より「ステートの設計」を重視してやった方がいい。あとで全てのコンポーネントに支障が出る。\nconst initialState = {\n    character: chState,\n    newStyle,\n    componentStyle: {\n        heading: {\n            a: {\n                borderLeft: '4px solid #58d510',\n                background: '#fff',\n                paddingLeft: '.5em',\n                margin: '0 0 10px'\n            }\n        }\n    }\n}\n\n//レデューサー（CSSの取得のみにしたい）\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'br':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    borderRadius: action.value\n                }\n            }\n        case 'bd': \n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    border:action.value\n                }\n            }\n        case 'wd':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    width: action.value\n                }\n            }\n        case 'pd':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    padding: action.value\n                }\n            }\n        case 'bg':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    background: action.value\n                }\n            }\n        case 'cr':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    color: action.value\n                }\n            }\n        case 'ch':\n            return {\n                ...state,\n                character: action.value\n            }\n        case 'cu':\n            return {\n                ...state,\n                componentUnit: {\n                    ...state.componentUnit,\n                    ...action.value\n                }\n            }\n        case 'sample':\n            return {\n                ...state,\n                newStyle: {\n                    ...state.newStyle,\n                    ...action.value\n                }\n            }\n    }\n}\n\n//ステートと統合\nexport function Integrate() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <Sheet.Provider value={[state, dispatch]}>\n            <Sample />\n            <div className=\"c-disp\">\n                <Preview />\n                <Cascade />\n            </div>\n            <div className=\"block\">\n                <Character />\n                <Width />\n                <Color />\n                <Background />\n                <Padding />\n                <BorderRadius />\n                <Border />\n            </div>\n        </Sheet.Provider>\n    )\n}\n","import { Integrate } from './components/Integrate';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Integrate />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}